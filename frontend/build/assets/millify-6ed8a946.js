var f={},c={};Object.defineProperty(c,"__esModule",{value:!0});c.defaultOptions=void 0;c.defaultOptions={lowercase:!1,precision:1,space:!1,units:["","K","M","B","T","P","E"]};var n={};Object.defineProperty(n,"__esModule",{value:!0});n.getLocales=n.getFractionDigits=n.roundTo=n.parseValue=void 0;function E(t){const e=parseFloat(t==null?void 0:t.toString());if(isNaN(e))throw new Error("Input value is not a number");if(e>Number.MAX_SAFE_INTEGER||e<Number.MIN_SAFE_INTEGER)throw new RangeError("Input value is outside of safe integer range");return e}n.parseValue=E;function N(t,e){if(!Number.isFinite(t))throw new Error("Input value is not a finite number");if(!Number.isInteger(e)||e<0)throw new Error("Precision is not a positive integer");return Number.isInteger(t)?t:parseFloat(t.toFixed(e))}n.roundTo=N;function O(t){var e;if(Number.isInteger(t))return 0;const r=t.toString().split(".")[1];return(e=r==null?void 0:r.length)!==null&&e!==void 0?e:0}n.getFractionDigits=O;function h(){var t;return typeof navigator>"u"?[]:Array.from((t=navigator.languages)!==null&&t!==void 0?t:[])}n.getLocales=h;Object.defineProperty(f,"__esModule",{value:!0});f.millify=void 0;const p=c,l=n,v=1e3;function*m(t){let e=v;for(;;){const r=t/e;if(r<1)return;yield r,e*=v}}function _(t,e){var r,d;const i=e?{...p.defaultOptions,...e}:p.defaultOptions;if(!Array.isArray(i.units)||!i.units.length)throw new Error("Option `units` must be a non-empty array");let o;try{o=l.parseValue(t)}catch(s){return s instanceof Error&&console.warn(`WARN: ${s.message} (millify)`),String(t)}const y=o<0?"-":"";o=Math.abs(o);let a=0;for(const s of m(o))o=s,a+=1;if(a>=i.units.length)return t.toString();let u=l.roundTo(o,i.precision);for(const s of m(u))u=s,a+=1;const g=(r=i.units[a])!==null&&r!==void 0?r:"",w=i.lowercase?g.toLowerCase():g,I=i.space?" ":"",b=u.toLocaleString((d=i.locales)!==null&&d!==void 0?d:l.getLocales(),{minimumFractionDigits:l.getFractionDigits(u)});return`${y}${b}${I}${w}`}f.millify=_;var A=f.default=_;export{A as _};
